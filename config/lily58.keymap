/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            display-name = "Base";
            bindings = <
&kp ESCAPE      &kp N1  &kp N2  &kp N3  &kp N4            &kp N5                                        &kp N6        &kp N7             &kp N8     &kp N9   &kp N0    &kp BACKSPACE
&kp TAB         &kp Q   &kp W   &kp E   &kp R             &kp T                                         &kp Y         &kp U              &kp I      &kp O    &kp P     &kp LEFT_BRACKET
&kp CAPSLOCK    &kp A   &kp S   &kp D   &kp F             &kp G                                         &kp H         &kp J              &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z   &kp X   &kp C   &kp V             &kp B      &kp LG(SPACE)    &kp LEFT_CONTROL  &kp N         &kp M              &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                                &mo 1   &kp LEFT_COMMAND  &kp SPACE  &kp RETURN       &mo 2             &kp LEFT_ALT  &kp RIGHT_COMMAND  &to 3
            >;
        };

        settings+media {
            bindings = <
&kp GRAVE          &bt BT_SEL 0      &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                            &trans  &trans              &trans              &trans               &trans          &trans
&kp C_VOLUME_UP    &kp C_NEXT        &trans        &trans        &trans        &trans                                  &trans  &trans              &kp LC(UP_ARROW)    &trans               &trans          &trans
&kp C_VOLUME_DOWN  &kp C_PLAY_PAUSE  &trans        &trans        &trans        &trans                                  &trans  &kp LC(LEFT_ARROW)  &kp LC(DOWN_ARROW)  &kp LC(RIGHT_ARROW)  &kp UP_ARROW    &trans
&trans             &kp C_PREVIOUS    &trans        &trans        &trans        &trans        &bt BT_CLR        &trans  &trans  &trans              &trans              &kp LEFT_ARROW       &kp DOWN_ARROW  &kp RIGHT_ARROW
                                                   &trans        &kp K_COPY    &kp K_PASTE   &kp LG(LS(N5))    &trans  &trans  &trans              &trans
            >;
        };

        fn+symbols {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6                    &kp F7  &kp F8             &kp F9           &kp F10           &kp F11            &kp F12
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp LEFT_BRACE     &kp RIGHT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp MINUS          &kp EQUAL        &kp BACKSLASH     &trans             &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp RIGHT_BRACKET  &trans           &trans            &trans             &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans             &trans
            >;
        };

        arrows+option {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans        &trans          &trans          &kp LA(BACKSPACE)
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans        &trans          &trans          &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans        &trans          &kp UP_ARROW    &kp LS(LEFT_ALT)
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &kp LEFT_ALT  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &to 0
            >;
        };
    };
};
